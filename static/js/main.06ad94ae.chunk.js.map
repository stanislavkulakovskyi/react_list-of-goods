{"version":3,"sources":["App.tsx","components/GoodsList/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","setState","handleReverse","handleReset","this","validGoods","visibleGoods","ALPHABET","sort","prevGood","currGood","localeCompare","LENGTH","length","reverse","getReorderedGoods","canReset","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAqBKA,E,iFCfQC,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDFnBC,G,YAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMM,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,WAAa,SAACF,GACZ,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,cAAgB,WACd,EAAKD,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAZzB,EAgBEM,YAAc,WACZ,EAAKF,SAAS,CACZH,SAAUT,EAASU,KACnBF,YAAY,KAnBlB,4CAuBE,WAAU,IAAD,OACP,EAAiCO,KAAKR,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZQ,EA1DH,SACLd,EADK,GAGJ,IADCO,EACF,EADEA,SAAUD,EACZ,EADYA,WAENS,EAAY,YAAOf,GAEzB,OAAQO,GACN,KAAKT,EAASkB,SACZD,EAAaE,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASE,cAAcD,MAEjD,MAEF,KAAKrB,EAASuB,OACZN,EAAaE,MACX,SAACC,EAAUC,GAAX,OAAwBD,EAASI,OAASH,EAASG,UAQzD,OAAOhB,EACHS,EAAaQ,UACbR,EAiCiBS,CAAkBrB,EAAiBU,KAAKR,OACrDoB,EAAYlB,IAAaT,EAASU,MAASF,EAEjD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYrB,IAAaT,EAASkB,WAEtCa,QAAS,kBAAM,EAAKpB,WAAWX,EAASkB,WAN1C,iCAWA,wBACEW,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYrB,IAAaT,EAASuB,SAEtCQ,QAAS,kBAAM,EAAKpB,WAAWX,EAASuB,SAN1C,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAAShB,KAAKF,cANhB,qBAWCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKD,YAHhB,sBAUJ,cAAC,EAAD,CAAWZ,MAAOc,WA3E1B,GAAyBgB,aE9DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06ad94ae.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nimport { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort(\n        (prevGood, currGood) => prevGood.localeCompare(currGood),\n      );\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort(\n        (prevGood, currGood) => prevGood.length - currGood.length,\n      );\n      break;\n\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const validGoods = getReorderedGoods(goodsFromServer, this.state);\n    const canReset = (sortType !== SortType.NONE) || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {canReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={validGoods} />\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li data-cy=\"Good\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}